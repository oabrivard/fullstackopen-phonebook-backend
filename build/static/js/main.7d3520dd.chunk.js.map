{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","services/persons.js","components/Notification.js","App.js","index.js"],"names":["Filter","newFilter","handleFilterChange","value","onChange","PersonForm","props","onSubmit","addPerson","newName","handlePersonChange","newNumber","handleNumberChange","type","Person","person","deletePerson","name","number","onClick","Persons","persons","filter","p","toLowerCase","includes","map","key","id","baseUrl","axios","get","then","response","data","newObject","post","delete","Notification","notification","className","message","App","useState","setNewFilter","setPersons","setNewName","setNewNumber","setNotification","useEffect","personService","initialPersons","event","target","preventDefault","find","setTimeout","returnedPerson","concat","catch","error","errorMessage","status","window","confirm","console","log","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7d3520dd.chunk.js","sourcesContent":["import React from 'react';\n\nconst Filter = ({newFilter,handleFilterChange}) => {\n  return (\n    <div>\n      filter shown with <input value={newFilter} onChange={handleFilterChange} />      \n    </div>\n  );\n}\n\nexport default Filter;","import React from 'react';\n\nconst PersonForm = props => {\n  return (\n    <div>\n      <form onSubmit={props.addPerson}>\n        <div>\n          name: <input value={props.newName} onChange={props.handlePersonChange} />\n        </div>\n        <div>\n          number: <input value={props.newNumber} onChange={props.handleNumberChange} />\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>      \n    </div>\n  );\n};\n\nexport default PersonForm;","import React from 'react';\n\nconst Person = ({person, deletePerson}) => <div>\n  {person.name} {person.number} \n  <button onClick={deletePerson}>delete</button>\n</div>\n\nconst Persons = ({persons,newFilter,deletePerson}) => {\n  return (\n    <div>\n      {persons.filter(p => p.name.toLowerCase().includes(newFilter.toLowerCase())).map(p => <Person key={p.id} person={p} deletePerson={() => deletePerson(p.id)}/>)}      \n    </div>\n  );\n};\n\nexport default Persons;","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nconst suppress = id => {\n  const request = axios.delete(`${baseUrl}/${id}`)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, update, suppress }","import React from 'react'\n\nconst Notification = ({ notification }) => {\n  if (notification === null) {\n    return null\n  }\n\n  return (\n    <div className={`notification ${notification.type}`}>\n      {notification.message}\n    </div>\n  )\n}\n\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport personService from './services/persons'\nimport Notification from './components/Notification'\n\nconst App = () => {\n  const [ newFilter, setNewFilter ] = useState('')\n  const [ persons, setPersons ] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [notification, setNotification] = useState(null)\n  \n  useEffect(() => {\n    personService\n    .getAll()\n    .then(initialPersons => {\n      setPersons(initialPersons)\n      })\n  }, [])\n\n  const handleFilterChange = event => {\n    setNewFilter(event.target.value)\n  }\n\n  const addPerson = event => {\n    event.preventDefault()\n\n    const person = persons.find(p => p.name.toLowerCase() === newName.toLowerCase())\n    if (person) {\n      setNotification({\n        type: 'error',\n        message: `${newName} is already added to phonebook`\n      })\n\n      setTimeout(() => {setNotification(null)}, 5000)\n    } else {\n      const newPerson = {\n        name : newName,\n        number : newNumber\n      }\n\n      personService\n      .create(newPerson)\n      .then(returnedPerson => {\n        setNotification({\n          type: 'success',\n          message: `Added '${returnedPerson.name}'`\n        })\n        setTimeout(() => {setNotification(null)}, 5000)\n        setPersons(persons.concat(returnedPerson))\n      })\n      .catch(error => {\n        const errorMessage = error?.response?.data?.error || 'an error occured on the server'\n        setNotification({\n          type: 'error',\n          message: errorMessage\n        })\n        setTimeout(() => {setNotification(null)}, 5000)\n        if (error?.response?.status===404) {\n          setPersons(persons.filter(p => p.id !== person.id))\n        }\n      })   \n    }\n\n    setNewName('')\n    setNewNumber('')\n  }\n\n  const deletePerson = id => {\n    const person = persons.find(p => p.id === id)\n\n    if (! window.confirm(`Delete ${person.name} ?`)) { \n      return\n    }\n\n    personService\n    .suppress(id)\n    .then(data => {\n      console.log(data)\n      setPersons(persons.filter(p => p.id !== id))\n    })\n    .catch(error => {\n      setNotification({\n        type: 'error',\n        message: `the person '${person.name}' was already deleted from server`\n      })\n      setTimeout(() => {setNotification(null)}, 5000)\n      setPersons(persons.filter(p => p.id !== id))\n    })      \n}\n  \n  const handlePersonChange = event => {\n    setNewName(event.target.value)\n  }\n  \n  const handleNumberChange = event => {\n    setNewNumber(event.target.value)\n  }\n  \n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification notification={notification} />\n      <Filter newFilter={newFilter} handleFilterChange={handleFilterChange} />\n      <h3>Add a new</h3>\n      <PersonForm addPerson={addPerson} newName={newName} handlePersonChange={handlePersonChange} newNumber={newNumber} handleNumberChange={handleNumberChange} />\n      <h3>Numbers</h3>\n      <Persons persons={persons} newFilter={newFilter} deletePerson={deletePerson}/>\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}